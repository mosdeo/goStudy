package main

import (
	"fmt"
)

type TestCase struct {
	Qus []int
	Ans int
}

func main() {
	var testCases = []TestCase{
		TestCase{
			Qus: []int{2, 3, 4},
			Ans: 9,
		},
		TestCase{
			Qus: []int{2, 6, 2},
			Ans: 0,
		},
		TestCase{
			Qus: []int{352931, 625564, 342527, 500014, 270475, 883284, 579073, 144017, 380890, 379129, 716005, 566629, 148304, 965524, 372414, 331911, 89153, 335414, 802829, 455876, 93664, 232128, 783959, 657170, 380914, 379697, 38417, 596446, 691240, 620137, 845609, 597947, 931088, 59761, 835235, 928487, 802997, 104212, 785598, 854854, 232500, 839646, 406587, 598027, 625221, 860210, 980419, 189883, 169242, 658400, 218646, 479356, 904010, 458478, 425739, 987901, 820848, 137316, 188947, 990344, 516646, 822057, 21901, 881728, 507728, 110078, 842774, 105568, 578363, 575122, 227880, 372503, 25536, 362297, 918854, 932501, 915348, 844290, 34874, 409236, 883266, 967000, 563318, 795458, 505401, 546869, 159623, 644164, 346072, 163156, 786530, 7621, 733297, 644337, 446494, 695294, 299233, 197255, 594624, 497471, 412746, 976867, 88053, 1704, 621962, 380509, 396709, 856480, 799403, 797908, 842746, 508074, 458292, 474648, 698865, 110891, 868468, 876260, 957865, 217286, 598031, 302016, 339557, 222545, 713854, 458888, 234972, 580371, 745342, 897065, 385910, 774749, 527499, 716634, 645420, 769466, 720119, 811135, 414375, 537443, 70613, 723470, 428687, 897574, 32454, 946521, 590916, 806757, 16441, 15560, 821957, 581213, 970446, 294990, 784574, 743781, 535191, 184441, 245678, 22553, 156996, 289731, 566095, 795624, 492904, 80443, 369235, 211237, 178945, 927347, 143022, 910081, 316591, 81791, 467265, 601382, 464643, 104485, 730094, 966406, 497151, 183089, 109960, 531010, 208429, 251861, 760673, 199330, 533288, 887934, 610232, 41338, 803711, 629190, 194285, 496993, 119045, 497069, 354058, 18831, 482230, 513439, 10337, 326, 907239, 364674, 15141, 696328, 485479, 704990, 677733, 106900, 583461, 636287, 977346, 68704, 443354, 864715, 441884, 854194, 831988, 810794, 736738, 512250, 940674, 574265, 376428, 337511, 999587, 629810, 647952, 408951, 196843, 318886, 136963, 924988, 790798, 749439, 424791, 511844, 399572, 891504, 555247, 177616, 352883, 846347, 659628, 294049, 930760, 26967, 761857, 454112, 719218, 685580, 229901, 386810, 517371, 407729, 41762, 400984, 521451, 348113, 346383, 163198, 128330, 491006, 703725, 979504, 541286, 572131, 889203, 322028, 233528, 992428, 20284, 752173, 953719, 406390, 295897, 377650, 166315, 417790, 764785, 500092, 295195, 793037, 419347, 292143, 47447, 896647, 120470, 36802, 470141, 771099, 196240, 131110, 880756, 29513, 257410, 393855, 699675, 310239, 253646, 962404, 70064, 936341, 445623, 48604, 385311, 58125, 432641, 71179, 285241, 247567, 283308, 424301, 24048, 926603, 860275, 756463, 747882, 391883, 644347, 511524, 670214, 886196, 753188, 970353, 752665, 175113, 681982, 319536, 753313, 828490, 238617, 349373, 948501, 554087, 492033, 199778, 376158, 948120, 903181, 361142, 405007, 827483, 315887, 873659, 211085, 798847, 801859, 84376, 693480, 785369, 147017, 671995, 651032, 72506, 749680, 643742, 769468, 68565, 984254, 653772, 594429, 324472, 123854, 347308, 951192, 546583, 44656, 422301, 589956, 411104, 771884, 173926, 450531, 47575, 16415, 563898, 313669, 490782, 914200, 50796, 449662, 196863, 14647, 9331, 476830, 769740, 479108, 659956, 687790, 675150, 276660, 958498, 528003, 334257, 256679, 125844, 976829, 445878, 455838, 221784, 271922, 592796, 118474, 509548, 69127, 709083, 470991, 553892, 118442, 994382, 345593, 139202, 773568, 565026, 232524, 503313, 967341, 687419, 629184, 123571, 170087, 879886, 844639, 966280, 233288, 935571, 873902, 162706, 165532, 138154, 605566, 192117, 780551, 807993, 849642, 637401, 520090, 908584, 188849, 828044, 722303, 429189, 597300, 491276, 993335, 838805, 819726, 923862, 462002, 48505, 864432, 170847, 102530, 987830, 684966, 682904, 921080, 218296, 851648, 260125, 160416, 125705, 470541, 193270, 16969, 463082, 684230, 472117, 787291, 487670, 518846, 838096, 914691, 293682, 946445, 565693, 867204, 331037, 855875, 918821, 141999, 780582, 208006, 36768, 954526, 925425, 795489, 54414, 507940, 477422, 785028, 761486, 352814, 152018, 92765, 599938, 481557, 461888, 48698, 929497, 890036, 47950, 631882, 509397, 617345, 989679, 616148, 38518, 126509, 933533, 825241, 729375, 631103, 37091, 108251, 295773, 570905, 508677, 563592, 974277, 601819, 942419, 864513, 523636, 620914, 395586, 46885, 504919, 589956, 191685, 985180, 858678, 491042, 999198, 994413, 896706, 232994, 437726, 507024, 170036, 459429, 209975, 951089, 87840, 278056, 33180, 239112, 96000, 796901, 373866, 196223, 74211, 517092, 542662, 689685, 775208, 56374, 418412, 711222, 90454, 305680, 876015, 409088, 916161, 714429, 909716, 521664, 676958, 453738, 673526, 23552, 32174, 635693, 640831, 454122, 241849, 321025, 986301, 143386, 672240, 395514, 875797, 907994, 408342, 161595, 805444, 381288, 640093, 130308, 893103, 175517, 497425, 415332, 360151, 830459, 927319, 725270, 90882, 727122, 900332, 190164, 921873, 687649, 700937, 319192, 809279, 6128, 102102, 904242, 766961, 565752, 605142, 618914, 933544, 924444, 531784, 269243, 332322, 79278, 543065, 480565, 708746, 578993, 185223, 637022, 56652, 840752, 928955, 679601, 956717, 733808, 211091, 357821, 272045, 349510, 524368, 26084, 664790, 623558, 231332, 643893, 833025, 719792, 90839, 739442, 19171, 907457, 390597, 999501, 487630, 243167, 139080, 26586, 672308, 416470, 257023, 289418, 397815, 930710, 727677, 151990, 43582, 78145, 894692, 845527, 223258, 121808, 127126, 478475, 280982, 582507, 550667, 80314, 23832, 506489, 86789, 317625, 888576, 777932, 777966, 207766, 754672, 521977, 801469, 991, 749191, 74910, 989309, 895057, 855265, 850458, 763480, 724873, 640184, 746260, 308209, 824391, 715014, 429320, 352612, 261453, 596326, 164928, 28128, 684563, 347041, 375727, 833779, 112713, 801457, 861667, 167927, 365277, 266219, 411868, 844784, 32162, 384614, 856855, 795688, 140513, 409432, 877712, 325572, 526668, 485350, 48929, 679981, 628263, 78849, 395510, 960293, 803160, 847738, 968734, 66238, 228858, 364447, 217455, 689961, 261520, 51491, 422725, 452149, 327454, 2816, 880225, 796270, 217637, 217643, 663546, 365165, 510208, 786493, 390935, 334412, 900987, 740391, 473010, 333373, 494421, 12119, 573433, 312501, 157903, 793779, 165447, 887335, 783950, 507647, 111461, 601189, 626878, 819122, 461678, 591701, 36649, 899333, 751821, 66657, 37395, 904936, 835843, 610325, 609715, 46113, 444999, 221648, 866418, 809350, 339706, 948434, 414293, 276962, 719493, 76098, 427621, 242018, 249258, 65285, 929619, 107337, 361884, 525457, 104973, 59473, 48394, 456157, 253139, 877909, 485555, 790316, 664440, 715579, 287196, 114634, 153717, 923726, 618883, 32515, 929472, 232775, 993852, 610175, 421195, 251743, 351918, 82049, 9698, 563097, 779291, 516987, 381116, 730004, 841684, 181341, 603428, 280686, 311964, 751219, 748984, 173510, 693408, 966670, 458175, 14731, 795684, 308957, 880185, 143100, 57814, 868668, 512393, 159728, 181144, 671876, 990881, 978477, 639918, 866584, 691381, 236025, 819102, 870645, 266958, 424206, 808938, 781089, 562093, 808489, 892068, 242518, 249353, 468998, 254343, 973691, 867068, 922074, 140578, 640170, 810738, 408851, 886696, 841757, 888472, 492776, 169451, 313898, 371408, 74492, 786171, 972828, 767282, 810297, 337930, 850491, 472211, 229970, 57176, 755674, 369617, 299773, 541665, 384362, 616764, 758710, 10127, 330972, 12804, 843395, 183434, 797132, 379546, 713979, 977970, 628862, 52711, 260602, 13666, 107943, 573722, 320930, 467567, 968370, 891663, 110764, 980057, 811927, 561100, 140001, 376051, 374294, 421913, 510836, 61504, 378315, 689470, 617865, 865394, 52274, 810878, 449927, 188237, 128553, 436933, 473434, 742819, 693244, 561864, 177619, 179704, 122520, 976484, 748346, 68689, 830193, 397206, 786537, 841427, 734302, 769151, 699517, 53774, 430636, 605712, 299742, 286248, 582030, 699034, 654016, 793817, 920143, 423350, 866514, 599965, 354998, 927367, 518969, 10732, 851683, 713287, 581472, 781618, 10852, 828294, 447200, 114321, 529397, 406410, 480088, 803412, 646926, 348095, 76544, 374079, 261643},
			Ans: 2998286,
		},
	}

	for _, testCase := range testCases {
		fmt.Println("")
		result := largestPerimeter(testCase.Qus)
		fmt.Println("Qus=", testCase.Qus)
		fmt.Println("True Ans=", testCase.Ans)

		//答案錯誤就暫停
		if testCase.Ans != result {
			fmt.Println("Mistake answer =", result)
			//break
		}
	}
}

func largestPerimeter(A []int) int {
	maxPerimeter := 0

	for i, a := range A {
		for j, b := range A {
			if i == j {
				continue
			}
			for k, c := range A {
				if j == k || i == k {
					continue
				}
				if !isTriangle(a, b, c) {
					continue
				}
				maxPerimeter = MaxInt(maxPerimeter, a+b+c)
			}
		}
	}

	return maxPerimeter
}

func isTriangle(a, b, c int) bool {
	if a+b <= c {
		return false
	}
	if a+c <= b {
		return false
	}
	if b+c <= a {
		return false
	}
	return true
}

func MaxInt(a, b int) int {
	if a > b {
		return a
	} else {
		return b
	}
}
